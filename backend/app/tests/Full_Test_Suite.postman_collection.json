{
	"info": {
		"_postman_id": "b150e23a-9f37-4b14-9376-4a9142e807b1",
		"name": "Full_Test_Suite",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "Invalid Posts",
					"item": [
						{
							"name": "Empty Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"})\r",
											"\r",
											"pm.test(\"Response test\", function() {\r",
											"    pm.response.to.be.withBody;\r",
											"    \r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.message).to.eql(\"username can not be empty.\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{site}}:{{port}}/users",
									"host": [
										"{{site}}"
									],
									"port": "{{port}}",
									"path": [
										"users"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Add Post",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"id\", pm.response.text());\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"titleeee\",\r\n    \"description\": \"im going on vacation\",\r\n    \"post_date\": \"1990-01-01\",\r\n    \"destinations\": [{\r\n        \"country\": \"USA\",\r\n        \"city\": \"Indy\",\r\n        \"region\": \"Indiana\"\r\n      }]\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{site}}:{{port}}/posts",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Trip_Photos",
			"item": [
				{
					"name": "Add Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"photo-id\", pm.response.text());\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "./test_assets/test-image.png"
								},
								{
									"key": "author_id",
									"value": "604459603d6da00bc06c2cbd",
									"type": "text"
								},
								{
									"key": "trip_id",
									"value": "60445c76a3041c53e897352c",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{site}}:{{port}}/trip_photos",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"trip_photos"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Photo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/trip_photos/{{photo-id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"trip_photos",
								"{{photo-id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Add User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"user-id\", pm.response.text());\r",
									"    postman.setEnvironmentVariable(\"message-board-id\", \"60495fd323e4d3826cba09cb\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", _.random(1,1000000).toString() + \"@gmail.com\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuname\",\r\n    \"password\": \"testpword\",\r\n    \"email\": \"{{email}}\",\r\n    \"birthdate\": \"1991-01-01\",\r\n    \"gender\": \"Male\",\r\n    \"first_name\": \"testI\",\r\n    \"last_name\": \"testL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{site}}:{{port}}/users",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Text Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"message-id\", pm.response.text());\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "author_id",
									"value": "{{user-id}}",
									"type": "text"
								},
								{
									"key": "message_board_id",
									"value": "{{message-board-id}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "text",
									"type": "text"
								},
								{
									"key": "text",
									"value": "test string",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{site}}:{{port}}/messages",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Text Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/messages/{{message-id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"messages",
								"{{message-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Image Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"message-id\", pm.response.text());\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "./test_assets/test-image.png"
								},
								{
									"key": "author_id",
									"value": "{{user-id}}",
									"type": "text"
								},
								{
									"key": "message_board_id",
									"value": "{{message-board-id}}",
									"type": "text"
								},
								{
									"key": "type",
									"value": "image",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{site}}:{{port}}/messages",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"messages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Message",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/messages/{{message-id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"messages",
								"{{message-id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Basic CRUD Test",
			"item": [
				{
					"name": "Add User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    \r",
									"    postman.setEnvironmentVariable(\"id\", pm.response.text());\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", _.random(1,1000000).toString() + \"@gmail.com\")"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuname\",\r\n    \"password\": \"testpword\",\r\n    \"email\": \"{{email}}\",\r\n    \"birthdate\": \"1991-01-01\",\r\n    \"gender\": \"Male\",\r\n    \"first_name\": \"testI\",\r\n    \"last_name\": \"testL\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{site}}:{{port}}/users",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    // We should add a check that password is not included when the endpoint is changed to not send it back\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get(\"id\"));\r",
									"    pm.expect(jsonData.username).to.eql(\"testuname\");\r",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
									"    pm.expect(jsonData.birthdate).to.eql(\"1991-01-01T00:00:00.000Z\")\r",
									"    pm.expect(jsonData.gender).to.eql(\"Male\")\r",
									"    pm.expect(jsonData.first_name).to.eql(\"testI\")\r",
									"    pm.expect(jsonData.last_name).to.eql(\"testL\")\r",
									"})  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/users/{{id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User By Criteria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    // We should add a check that password is not included when the endpoint is changed to not send it back\r",
									"    var jsonData = pm.response.json()[0];\r",
									"    pm.expect(jsonData._id).to.eql(pm.environment.get(\"id\"));\r",
									"    pm.expect(jsonData.username).to.eql(\"testuname\");\r",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
									"    pm.expect(jsonData.birthdate).to.eql(\"1991-01-01T00:00:00.000Z\")\r",
									"    pm.expect(jsonData.gender).to.eql(\"Male\")\r",
									"    pm.expect(jsonData.first_name).to.eql(\"testI\")\r",
									"    pm.expect(jsonData.last_name).to.eql(\"testL\")\r",
									"})  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/users?email={{email}}&username=testuname",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							],
							"query": [
								{
									"key": "email",
									"value": "{{email}}"
								},
								{
									"key": "username",
									"value": "testuname"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"    pm.response.to.be.json;\r",
									"\r",
									"    // We should add a check that password is not included when the endpoint is changed to not send it back\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Authentication successful!\");\r",
									"})  "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "testuname",
									"type": "text"
								},
								{
									"key": "password",
									"value": "testpword",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{site}}:{{port}}/users/login",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/users/{{id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify User Was Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"})\r",
									"\r",
									"\r",
									"pm.test(\"Response test\", function() {\r",
									"    pm.response.to.be.withBody;\r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Could not find User with id=\" + pm.environment.get(\"id\") + \".\");\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{site}}:{{port}}/users/{{id}}",
							"host": [
								"{{site}}"
							],
							"port": "{{port}}",
							"path": [
								"users",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "site",
			"value": "localhost"
		},
		{
			"key": "port",
			"value": "3001"
		}
	]
}